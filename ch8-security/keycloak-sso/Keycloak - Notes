---------------------------------------------------------------------------------
Features
---------------------------------------------------------------------------------
- Single-Sign-On (SSO)
- Identity Brokering and Social Login
- User Federation
- Client Adapters
- Admin Console
- Account Management Console

---------------------------------------------------------------------------------
Realm
---------------------------------------------------------------------------------
- Domain

# Master Realm
- default
- parent of all others
- admin user (set in docker compose)

---------------------------------------------------------------------------------
Bearer
---------------------------------------------------------------------------------
TODO

---------------------------------------------------------------------------------
Users & Roles
---------------------------------------------------------------------------------
- Keycloak uses the Role-Based Access
- Therefore, each user must have a role

---------------------------------------------------------------------------------
How To
---------------------------------------------------------------------------------
1.) create Realm
    - Name: SpringBootKeycloak

2.) create a Client
    - Client ID: todoapp
    -> save
    - Valid Redirect URIs: http://localhost:15000/*

3.) create a Role
    - Role Name: user

4.) create a User
    - Username: user1
    -> save

    -> Credentials Tab
    - New Password: pass1

    -> Role Mappings
    - add Role 'user'

    -> Details Tab
    - Required User Actions: must be empty, remove 'Update Password' if set
---------------------------------------------------------------------------------
Tokens
---------------------------------------------------------------------------------
- Keycloak provides a REST API for generating and refreshing access tokens
- use this API to create a login page

POST http://localhost:8180/auth/realms/master/protocol/openid-connect/token

Body
{
    'client_id': 'your_client_id',
    'username': 'your_username',
    'password': 'your_password',
    'grant_type': 'password'
}

Response
- contains an access_token and a refresh_token

curl -X POST http://localhost:8180/auth/realms/SpringBootKeycloak/protocol/openid-connect/token \
-H "Content-Type:application/x-www-form-urlencoded" \
-d "client_id=todoapp" \
-d "username=user1" \
-d "password=pass1" \
-d "grant_type=password"

---------------------------------------------------------------------------------
access_token
---------------------------------------------------------------------------------
- should be used in every request to a Keycloak-protected resource
- placing it in the Authorization header

headers: {
    'Authorization': 'Bearer' + access_token
}

---------------------------------------------------------------------------------
refresh_token
---------------------------------------------------------------------------------
- Once the access token has expired, it can be refreshed
- request contains the refresh token instead of username and password

POST http://localhost:8180/auth/realms/master/protocol/openid-connect/token

Body
{
    'client_id': 'your_client_id',
    'refresh_token': refresh_token_from_previous_request,
    'grant_type': 'refresh_token'
}

Response
- contains new access_token and refresh_token

