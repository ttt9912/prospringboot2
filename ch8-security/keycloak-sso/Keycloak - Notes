--------------------------------------------------------
Keycloack Admin Console
--------------------------------------------------------
- http://localhost:8180/auth/
- admin/admin

---------------------------------------------------------------------------------
How To
---------------------------------------------------------------------------------
1.) create Realm
    - Name: Edurion

2.) create a Client
    - Client ID: edurionapp-local
    -> save
    - Valid Redirect URIs: http://localhost:8080/*

3.) create a Role
    - Role Name: user

4.) create a User
    - Username: thomas
    -> save

    -> Credentials Tab
    - New Password: pass1

    -> Role Mappings
    - add Role 'user'

    -> Details Tab
    - Required User Actions: must be empty, remove 'Update Password' if set
      (otherwise, call with curl is difficult)

Add more Client apps to Realm
1.) create Client edurionapp1-local
2.) User, Role are on Realm level, no need to create new
    There might be a possibility to add Roles on Client level
---------------------------------------------------------------------------------
Tokens
---------------------------------------------------------------------------------
- Keycloak provides a REST API for generating and refreshing access tokens
- use this API to create a login page

Body
{
    'client_id': 'your_client_id',
    'username': 'your_username',
    'password': 'your_password',
    'grant_type': 'password'
}

Response
- contains an access_token and a refresh_token

curl -X POST http://localhost:8180/auth/realms/Edurion/protocol/openid-connect/token \
-H "Content-Type:application/x-www-form-urlencoded" \
-d "client_id=edurionapp-local" \
-d "username=thomas" \
-d "password=pass1" \
-d "grant_type=password"

---------------------------------------------------------------------------------
access_token
---------------------------------------------------------------------------------
- should be used in every request to a Keycloak-protected resource
- placing it in the Authorization header

headers: {
    'Authorization': 'Bearer' + access_token
}

curl -i -X GET http://localhost:8080/api/edutasks \
-H "Accept: application/json" \
-H "Authorization: Bearer <TOKEN>"

---------------------------------------------------------------------------------
refresh_token
---------------------------------------------------------------------------------
- Once the access token has expired, it can be refreshed
- request contains the refresh token instead of username and password

POST http://localhost:8180/auth/realms/master/protocol/openid-connect/token

Body
{
    'client_id': 'your_client_id',
    'refresh_token': refresh_token_from_previous_request,
    'grant_type': 'refresh_token'
}

Response
- contains new access_token and refresh_token
